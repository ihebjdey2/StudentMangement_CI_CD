pipeline {
  agent any

  tools {
    maven 'M3'
    jdk 'jdk17'
  }

  options { timestamps() }

  stages {

    // -------------------------------
    // 1Ô∏è‚É£ √âtape : R√©cup√©ration du code
    // -------------------------------
    stage('Checkout') {
      steps {
        echo 'üîπ √âtape 1 : R√©cup√©ration du code depuis GitHub...'
        checkout scm
      }
    }

    // -------------------------------
    // 2Ô∏è‚É£ √âtape : Compilation + Tests
    // -------------------------------
    stage('Build & Test') {
      steps {
        echo 'üîπ √âtape 2 : Compilation et tests avec H2...'
        sh 'mvn -B clean verify -Dspring.profiles.active=test'
      }
      post {
        always {
          junit '**/target/surefire-reports/*.xml'
        }
      }
    }

    // -------------------------------
    // 3Ô∏è‚É£ √âtape : Analyse SonarQube
    // -------------------------------
    stage('SonarQube Analysis') {
      steps {
        echo 'üîπ √âtape 3 : Analyse de qualit√© avec SonarQube...'
        withSonarQubeEnv('sonarqube') {
          withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
            sh """
              mvn sonar:sonar \
                -Dsonar.projectKey=student-management \
                -Dsonar.host.url=http://sonarqube:9000 \
                -Dsonar.login=${SONAR_TOKEN} \
                -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
            """
          }
        }
      }
    }

    // -------------------------------
    // 4Ô∏è‚É£ √âtape : Packaging (jar)
    // -------------------------------
    stage('Package') {
      steps {
        echo 'üîπ √âtape 4 : Cr√©ation du jar final...'
        sh 'mvn -B -DskipTests=true package'
      }
    }

    // -------------------------------
    // 5Ô∏è‚É£ √âtape : Archivage du jar
    // -------------------------------
    stage('Archive') {
      steps {
        echo 'üîπ √âtape 5 : Archivage du jar g√©n√©r√©...'
        archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
      }
    }

    // -------------------------------
    // 6Ô∏è‚É£ √âtape : D√©ploiement Nexus
    // -------------------------------
   stage('Deploy to Nexus') {
  steps {
    echo 'üîπ √âtape 6 : D√©ploiement du jar sur Nexus Repository...'
    withCredentials([usernamePassword(credentialsId: 'nexus-creds', usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
      withMaven(
        maven: 'M3',
        globalMavenSettingsConfig: 'MyGlobalSettings'
      ) {
        sh """
          mvn deploy -DskipTests \
            -Dnexus.username=$NEXUS_USER \
            -Dnexus.password=$NEXUS_PASS
        """
      }
    }
  }
}

  // -------------------------------
  // Post actions globales
  // -------------------------------
  post {
    success {
      echo '‚úÖ Pipeline termin√© avec succ√®s (Build + Tests + Sonar + Nexus).'
    }
    failure {
      echo '‚ùå √âchec du pipeline ! V√©rifie les logs Jenkins.'
    }
  }
}
